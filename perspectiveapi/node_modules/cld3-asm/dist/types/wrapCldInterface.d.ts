import { cwrapSignature } from 'emscripten-wasm-loader';
/**
 * @internal
 *
 * Wrap cld3 exported interfaces via cwrap for resuable mannter.
 */
export declare const wrapCldInterface: (cwrap: cwrapSignature) => {
    /**
     * get size of struct for interop.
     *
     * int get_SizeLanguageResult()
     */
    sizeLanguageResult: () => number;
    /**
     * Return unknown language identifier
     *
     * const char* get_UnknownIdentifier()
     */
    getUnknownIdentifier: () => number;
    /**
     * Min number of bytes needed to make a prediction if the default constructoris called.
     *
     * int get_MinNumBytesDefault()
     */
    getMinNumBytesDefault: () => number;
    /**
     * Max number of bytes to consider to make a prediction if the default constructor is called.
     *
     * int get_MaxNumBytesDefault()
     */
    getMaxNumBytesDefault: () => number;
    /**
     * Max number of input bytes to process.
     *
     * int get_MaxNumBytesInput()
     */
    getMaxNumBytesInput: () => number;
    /**
     * CldHandle* Cld_create(int min_num_bytes, int max_num_bytes)
     */
    create: (minBytes: number, maxBytes: number) => number;
    /**
     * void Cld_destroy(CldHandle* pCld)
     */
    destroy: (cldHandle: number) => void;
    /**
     * void Cld_findLanguage(CldHandle* pCld, const char* text, LanguageResult* out_result)
     */
    findLanguage: (cldHandle: number, text: number, outResult: number) => void;
    /**
     * int Cld_findTopNMostFreqLangs(CldHandle* pCld, const char* text, int num_langs, LanguageResult** out_results)
     */
    findTopNMostFreqLangs: (cldHandle: number, text: number, numLangs: number, outResults: number) => number;
};
//# sourceMappingURL=wrapCldInterface.d.ts.map